{
    "regularExpressions": [
        {
            "title": "Single digit",
            "description": "Matches exactly one digit.",
            "regexp": "\\d",
            "alternativeRegexp": "[0-9]",
            "matches": ["1", "7"],
            "nonMatches": ["a", "P", "@"]
        },
        {
            "title": "Single non digit",
            "description": "Matches exactly one character which can not be a digit. The circumflex as the first character in the brackets means \"NOT\"",
            "regexp": "\\D",
            "alternativeRegexp": "[^0-9]",
            "matches": ["a", "P", "@"],
            "nonMatches": ["1", "7"]
        },
        {
            "title": "Zero or more digits",
            "description": "Matches zero or more digits.",
            "regexp": "\\d*",
            "alternativeRegexp": "[0-9]{0,}",
            "matches": ["", "7", "1798451451"],
            "nonMatches": ["a", "P", "@"]
        },
        {
            "title": "Zero or one digit",
            "description": "Matches zero or one digit.",
            "regexp": "\\d{0,1}",
            "matches": ["", "7", "4"],
            "nonMatches": ["a", "11", "957"]
        },
        {
            "title": "One or more digits",
            "description": "Matches one or more digits.",
            "regexp": "\\d+",
            "alternativeRegexp": "[0-9]{1,}",
            "matches": ["0", "14", "18155111"],
            "nonMatches": ["a", "P", "@"]
        },
        {
            "title": "Three digits",
            "description": "Matches exactly three digits.",
            "regexp": "\\d{3}",
            "alternativeRegexp": "[0-9]{3}",
            "matches": ["123", "789", "048"],
            "nonMatches": ["1", "22", "1234", "a", ""]
        },
        {
            "title": "Three or more digits",
            "description": "Matches three or more digits.",
            "regexp": "\\d{3,}",
            "alternativeRegexp": "[0-9]{3,}",
            "matches": ["123", "4567", "1215854521"],
            "nonMatches": ["a", "1", "83", "a42"]
        },
        {
            "title": "Three to five digits",
            "description": "Matches three through five digits.",
            "regexp": "\\d{3,5}",
            "alternativeRegexp": "[0-9]{3,5}",
            "matches": ["123", "4567", "89012"],
            "nonMatches": ["12", "345678", "text"]
        },
        {
            "title": "Hexadecimal",
            "description": "Matches one hexadecimal.",
            "regexp": "[\\da-fA-F]",
            "alternativeRegexp": "[0-9a-fA-F]",
            "matches": ["1", "8", "A", "f"],
            "nonMatches": ["", "11", "G", "h"]
        },
        {
            "title": "Negative or positive number",
            "description": "Matches negative or positive number of one or more digits. To use a minus (hyphen) in a group\nyou can put it as the first character in the group, the first character after a negating circumflex,\nthe last character before the closing bracket or escape it.",
            "regexp": "[+\\-]{0,1}\\d+",
            "alternativeRegexp": "[-+]{0,1}[0-9]{1,}",
            "matches": ["0", "-19", "4", "-534", "+24", "-0"],
            "nonMatches": ["-", "1+1", "-11.2", ""]
        },
        {
            "title": "Zero or negative or positive number",
            "description": "Matches number zero or a negative or positive non zero of one or more digits.",
            "regexp": "0|[-+]{0,1}[1-9]\\d{0,}",
            "matches": ["0", "-19", "4", "-534", "+24"],
            "nonMatches": ["-", "-0", "1+1", "-11.2", ""]
        },
        {
            "title": "Zero or negative or positive float",
            "description": "Matches number zero or a negative or positive float (non zero).",
            "regexp": "0|[-+]{0,1}\\d{1,}\\.\\d{1,9}",
            "matches": ["0.1", "-19.0", "4.0154", "-0.534", "+0.24"],
            "nonMatches": ["-", "4", "-0", "1+1", "-11,2", "", "1.2.43"]
        },
        {
            "title": "Negative or positive float or int",
            "description": "Matches negative or positive float or int. (This expression accepts -0 and +0)",
            "regexp": "[-+]{0,1}\\d{1,}(\\.\\d{1,9}){0,1}",
            "matches": ["0.1", "-19.0", "4.0154", "-0.534", "+0.24", "11", "0", "+0"],
            "nonMatches": ["-", "a4", ".5", "1+1", "-11,2", "1+", "1.2.43"]
        },
        {
            "title": "One English letter et al",
            "description": "Matches one English letter, one digit or underscore. This character class is not very\nreliable so the alternative writing is to be preferred.",
            "regexp": "\\w",
            "alternativeRegexp": "[a-zA-Z_0-9]",
            "matches": ["a", "Z", "y", "_", "8"],
            "nonMatches": ["å", "$", "tr", "ä"]
        },
        {
            "title": "One Swedish letter",
            "description": "Matches one Swedish letter.",
            "regexp": "[a-zA-ZåäöÅÄÖ]",
            "matches": ["Ä", "z", "W", "ö"],
            "nonMatches": ["é", "à", "ł", "ß"]
        },
        {
            "title": "Some specific letters",
            "description": "Matches digit, lower case letters a through f, upper case letters Q, X or Z and money\nsymbols £, € and $.",
            "regexp": "[0-9a-fQXZ£€$]",
            "matches": ["a", "9", "Z", "$", "€"],
            "nonMatches": ["A", "x", "y", "¥"]
        },
        {
            "title": "Consonants",
            "description": "Matches all consonants but no wovels",
            "regexp": "[a-zA-Z&&[^aeiouyAEIOUY]]",
            "alternativeRegexp": "[b-df-hj-np-tv-xzB-DF-HJ-NP-TV-XZ]",
            "matches": ["b", "Q", "Z", "v", "L"],
            "nonMatches": ["A", "e", "y", "O"]
        },
        {
            "title": "Dot - Any character but new line",
            "description": "Matches any character that is not a new line. The non matching characters in the\nexample below are \\r\\n, \\r, \\n",
            "regexp": ".",
            "matches": ["b", "Q", "?", "!", "@", "¡", "1", "8"],
            "nonMatches": ["\r\n", "\r", "\n"]
        },
        {
            "title": "Single white space",
            "description": "Matches whitespace characters, like new line, carriage return, tab and space. The matching characters in the\nexample below are \\r\\n, \\r, \\n, space and \\f",
            "regexp": "\\s",
            "matches": ["\n", "\r", "\t", " ", "\f"],
            "nonMatches": ["", "x"]
        },
        {
            "title": "Single non white space",
            "description": "Matches non whitespace characters, like letter, digit or other symbol.",
            "regexp": "\\S",
            "alternativeRegexp": "[^\\s]",
            "matches": ["a", "x", "Ö", "+", "0", "&", "¥"],
            "nonMatches": ["\n", "\r", "\t", " ", "\f"]
        },
        {
            "title": "New line",
            "description": "Matches new line both in windows and unix-like os (mac). Windows uses CRLF (\\r\\n) while other uses only LF (\\n)\nThe strings that matches below are \\n and \\r\\n, the non-matching strings are \\n\\r and \\t.",
            "regexp": "\\R",
            "alternativeRegexp": "\\r{0,1}\\n",
            "matches": ["\n", "\r\n"],
            "nonMatches": ["\n\r", "\t"]
        },
        {
            "title": "Single white space or digit",
            "description": "Matches whitespace characters, like new line, carriage return, tab and space and a digit.",
            "regexp": "[\\s\\d]",
            "matches": ["\n", "\r", "\t", " ", "1", "9"],
            "nonMatches": ["", "x", "11", "A"]
        },
        {
            "title": "Date - a fairly good match",
            "description": "A fairly good matching of dates. It does not handel the number of days for each month and\nconsequently not leap years. Thus an invalid date like \"1997-02-31\" will still match. \nTo add another century, add a it to the start of the expression: \"(18|19|20)\\d{2}\", which would\nplace the failed date \"1874-11-15\" within the range for the expression and make it match.",
            "regexp": "(19|20)\\d{2}[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])",
            "matches": ["1920-12-31", "2037-11-19", "2000-01-01", "1968-08-19", "1997-02-31"],
            "nonMatches": ["1874-11-15", "1989-13-01", "2084-11-00"]
        },
        {
            "title": "Swedish social security number - Initial attempt",
            "description": "Simple matching of the Swedish social security number. six or eight digits, an optional\nhyphen and four digits. This expressions only checks for the right number or digits,\nnot wether they are correct.",
            "regexp": "(\\d{2}){0,1}\\d{6}-{0,1}\\d{4}",
            "matches": ["254789-1234", "987741008475", "12345678-0987", "8745632104"],
            "nonMatches": ["1234567-9781", "1920-12-11-5789", "647189-987", "87456321"]
        },
        {
            "title": "Swedish social security number - Improved",
            "description": "A somewhat better matching of the Swedish social security number. six or eight digits, an optional\nhyphen and four digits. Note that the first four non-matching numbers matched the initial attempt.",
            "regexp": "(19\\d{2}|20[01]\\d|\\d{2})(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|3[0-1])-{0,1}\\d{4}",
            "matches": ["19721011-6534", "7811309574", "120226-0987", "19991231-9999"],
            "nonMatches": ["254789-1234", "987741008475", "12345678-0987", "8745632104", "1234567-9781", "1920-12-11-5789", "647189-987", "87456321", "20040832-1541"]
        },
        
        {
            "title": "Swedish car number",
            "description": "Matches the Swedish licence plate number. Three upper case letters A-H, J-P, R-U or W-Z\nfollowed by 001 - 999 or 00 - 99 plus upper case letter A-H, J-P, R-U or W-Z.\nSome letter combinations are removed, like KKK, PKK and a few others, but this\nexpression does not handle these numbers.",
            "regexp": "[A-HJ-PR-UW-Z]{3} {0,1}(0\\d[A-HJ-PR-UW-Z1-9]|[1-9]\\d[A-HJ-PR-UW-Z0-9])",
            "alternativeRegexp": "[A-Z&&[^IQV]]{3} {0,1}(0\\d[A-Z1-9&&[^IQV]]|[1-9]\\d[A-Z0-9&&[^IQV]])",
            "matches": ["ABC123", "PKJ 001", "DEF 456", "HJK 94A", "AAA 00W"],
            "nonMatches": ["abc123", "CDE 000", "IIV 453", "DEF 4567", "QHI 987", "BCD 12I"]
        }
    ]
}